import os
from .configuration import RobinConfiguration


#TODO: Create a filesystem, that take in robin-config as input
# and has methods like filesystem.hypotheses_output(RobinConfiguration), filesystem.ranking_output(RobinConfiguration)

class FileSystem:
    def __init__(self,
                 robin_config: RobinConfiguration):
        self.robin_config = robin_config
        self.base_dir = os.path.join("robin_output", self.robin_config.disease_name)

        self.hypotheses= os.path.join(self.base_dir, "hypotheses_outputs")
        self.ranker_results = os.path.join(self.base_dir, "ranker_outputs")

        os.makedirs(self.hypotheses, exist_ok=True)
        os.makedirs(self.ranker_results, exist_ok=True)

    def get_hypotheses_output_path_json(self) -> str:
        """Path to hypotheses.json file generated by the agent."""
        return os.path.join(self.hypotheses, "hypotheses.json")

    def get_hypotheses_output_path_csv(self) -> str:
        """Path to hypotheses.csv file generated by the agent."""
        return os.path.join(self.hypotheses, "hypotheses.csv")

    def get_individual_ranker_comparison_path(self, comparison_index: int) -> str:
        """Path to a single comparison JSON file based on index."""
        return os.path.join(self.ranker_results, f"comparison_{comparison_index}.json")

    def get_ranking_output_path(self) -> str:
        """Path to the final ranking output CSV file."""
        return os.path.join(self.ranker_results, "final_ranking_output.csv")
